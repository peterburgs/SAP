type User
  @model
  @auth(rules: [ {allow: owner, operations: [create, delete]} ]) {
  id: ID!
  email: String!
  username: String!
  avatarKey: String!
  projects: [ProjectParticipant] @connection(keyName: "byMember", fields: ["id"])
  tasks: [Task] @connection(keyName: "byAssignee", fields: ["id"])
}

type Project
  @model
  @auth(rules: [ {allow: owner, operations: [create, update, delete]} ]) {
  id: ID!
  name: String!
  key: String!
  avatarKey: String!
  createdAt: AWSDateTime
  members: [ProjectParticipant] @connection(keyName: "byProject", fields: ["id"])
  tasks: [Task] @connection(keyName: "byProject", fields: ["id"])
  sprints: [Sprint] @connection(keyName: "byProject", fields: ["id"])
}

type ProjectParticipant
  @model
  @key(name: "byProject", fields: ["projectID", "memberID"])
  @key(name: "byMember", fields: ["memberID", "projectID"])
  @auth(rules: [ {allow: owner, operations: [create, update, delete]} ]) {
  id: ID!
  projectID: ID!
  memberID: ID!
  role: Role!
  project: Project! @connection(fields: ["projectID"])
  member: User! @connection(fields: ["memberID"])
}

enum Role {
  PROJECT_LEADER
  TEAM_MEMBER
}

type Sprint
  @model
  @key(name: "byProject", fields: ["projectID"])
  @auth(rules: [{allow: owner}]) {
  id: ID!
  startDate: AWSDate
  endDate: AWSDate
  goal: String!
  name: String!
  isCompleted: Boolean
  isStarted: Boolean
  projectID: ID!
  isBacklog: Boolean!
  project: Project! @connection(fields: ["projectID"])
  tasks: [Task] @connection(keyName: "bySprint", fields: ["id"])
}

type Task
  @model
  @key(name: "byProject", fields: ["projectID"])
  @key(name: "byAssignee", fields: ["assigneeID"])
  @key(name: "bySprint", fields: ["sprintID"])
  @auth(rules: [{allow: owner}]) {
  id: ID!
  name: String!
  summary: String!
  label: String
  description: String!
  projectID: ID!
  assigneeID: ID!
  sprintID: ID!
  priority: Int
  status: String
  project: Project! @connection(fields: ["projectID"])
  assignee: User! @connection(fields: ["assigneeID"])
  sprint: Sprint! @connection(fields: ["sprintID"])
}
